//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace MyDocsSL.FileService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fileinfo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Fileinfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ChangedField;
        
        private string NameField;
        
        private long SizeField;
        
        private System.Uri UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Changed {
            get {
                return this.ChangedField;
            }
            set {
                if ((this.ChangedField.Equals(value) != true)) {
                    this.ChangedField = value;
                    this.RaisePropertyChanged("Changed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExcelDocument", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ExcelDocument : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.WorkSheet> WorkSheetsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.WorkSheet> WorkSheets {
            get {
                return this.WorkSheetsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkSheetsField, value) != true)) {
                    this.WorkSheetsField = value;
                    this.RaisePropertyChanged("WorkSheets");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkSheet", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class WorkSheet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.ExcelRow> RowsField;
        
        private string SheetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.ExcelRow> Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SheetName {
            get {
                return this.SheetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SheetNameField, value) != true)) {
                    this.SheetNameField = value;
                    this.RaisePropertyChanged("SheetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExcelRow", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyDocsSL.FileService.Fileinfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyDocsSL.FileService.ExcelDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.WorkSheet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyDocsSL.FileService.WorkSheet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.ExcelRow>))]
    public partial class ExcelRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RowField;
        
        private object AField;
        
        private object BField;
        
        private object CField;
        
        private object DField;
        
        private object EField;
        
        private object FField;
        
        private object GField;
        
        private object HField;
        
        private object IField;
        
        private object JField;
        
        private object KField;
        
        private object LField;
        
        private object MField;
        
        private object NField;
        
        private object OField;
        
        private object PField;
        
        private object QField;
        
        private object RField;
        
        private object SField;
        
        private object TField;
        
        private object UField;
        
        private object VField;
        
        private object WField;
        
        private object XField;
        
        private object YField;
        
        private object ZField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public object A {
            get {
                return this.AField;
            }
            set {
                if ((object.ReferenceEquals(this.AField, value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public object B {
            get {
                return this.BField;
            }
            set {
                if ((object.ReferenceEquals(this.BField, value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public object C {
            get {
                return this.CField;
            }
            set {
                if ((object.ReferenceEquals(this.CField, value) != true)) {
                    this.CField = value;
                    this.RaisePropertyChanged("C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public object D {
            get {
                return this.DField;
            }
            set {
                if ((object.ReferenceEquals(this.DField, value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public object E {
            get {
                return this.EField;
            }
            set {
                if ((object.ReferenceEquals(this.EField, value) != true)) {
                    this.EField = value;
                    this.RaisePropertyChanged("E");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public object F {
            get {
                return this.FField;
            }
            set {
                if ((object.ReferenceEquals(this.FField, value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public object G {
            get {
                return this.GField;
            }
            set {
                if ((object.ReferenceEquals(this.GField, value) != true)) {
                    this.GField = value;
                    this.RaisePropertyChanged("G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public object H {
            get {
                return this.HField;
            }
            set {
                if ((object.ReferenceEquals(this.HField, value) != true)) {
                    this.HField = value;
                    this.RaisePropertyChanged("H");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public object I {
            get {
                return this.IField;
            }
            set {
                if ((object.ReferenceEquals(this.IField, value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public object J {
            get {
                return this.JField;
            }
            set {
                if ((object.ReferenceEquals(this.JField, value) != true)) {
                    this.JField = value;
                    this.RaisePropertyChanged("J");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public object K {
            get {
                return this.KField;
            }
            set {
                if ((object.ReferenceEquals(this.KField, value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public object L {
            get {
                return this.LField;
            }
            set {
                if ((object.ReferenceEquals(this.LField, value) != true)) {
                    this.LField = value;
                    this.RaisePropertyChanged("L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public object M {
            get {
                return this.MField;
            }
            set {
                if ((object.ReferenceEquals(this.MField, value) != true)) {
                    this.MField = value;
                    this.RaisePropertyChanged("M");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public object N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public object O {
            get {
                return this.OField;
            }
            set {
                if ((object.ReferenceEquals(this.OField, value) != true)) {
                    this.OField = value;
                    this.RaisePropertyChanged("O");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public object P {
            get {
                return this.PField;
            }
            set {
                if ((object.ReferenceEquals(this.PField, value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public object Q {
            get {
                return this.QField;
            }
            set {
                if ((object.ReferenceEquals(this.QField, value) != true)) {
                    this.QField = value;
                    this.RaisePropertyChanged("Q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public object R {
            get {
                return this.RField;
            }
            set {
                if ((object.ReferenceEquals(this.RField, value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public object S {
            get {
                return this.SField;
            }
            set {
                if ((object.ReferenceEquals(this.SField, value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public object T {
            get {
                return this.TField;
            }
            set {
                if ((object.ReferenceEquals(this.TField, value) != true)) {
                    this.TField = value;
                    this.RaisePropertyChanged("T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public object U {
            get {
                return this.UField;
            }
            set {
                if ((object.ReferenceEquals(this.UField, value) != true)) {
                    this.UField = value;
                    this.RaisePropertyChanged("U");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public object V {
            get {
                return this.VField;
            }
            set {
                if ((object.ReferenceEquals(this.VField, value) != true)) {
                    this.VField = value;
                    this.RaisePropertyChanged("V");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public object W {
            get {
                return this.WField;
            }
            set {
                if ((object.ReferenceEquals(this.WField, value) != true)) {
                    this.WField = value;
                    this.RaisePropertyChanged("W");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public object X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public object Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public object Z {
            get {
                return this.ZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZField, value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IFileService")]
    public interface IFileService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/ListFiles", ReplyAction="http://tempuri.org/IFileService/ListFilesResponse")]
        System.IAsyncResult BeginListFiles(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> EndListFiles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/DeleteFile", ReplyAction="http://tempuri.org/IFileService/DeleteFileResponse")]
        System.IAsyncResult BeginDeleteFile(string name, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/RenameFile", ReplyAction="http://tempuri.org/IFileService/RenameFileResponse")]
        System.IAsyncResult BeginRenameFile(string oldname, string newname, System.AsyncCallback callback, object asyncState);
        
        bool EndRenameFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/ListVersions", ReplyAction="http://tempuri.org/IFileService/ListVersionsResponse")]
        System.IAsyncResult BeginListVersions(string filename, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> EndListVersions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/DeleteVersion", ReplyAction="http://tempuri.org/IFileService/DeleteVersionResponse")]
        System.IAsyncResult BeginDeleteVersion(string name, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileService/GetExcelDocument", ReplyAction="http://tempuri.org/IFileService/GetExcelDocumentResponse")]
        System.IAsyncResult BeginGetExcelDocument(string filename, System.AsyncCallback callback, object asyncState);
        
        MyDocsSL.FileService.ExcelDocument EndGetExcelDocument(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : MyDocsSL.FileService.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RenameFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RenameFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExcelDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExcelDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MyDocsSL.FileService.ExcelDocument Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MyDocsSL.FileService.ExcelDocument)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<MyDocsSL.FileService.IFileService>, MyDocsSL.FileService.IFileService {
        
        private BeginOperationDelegate onBeginListFilesDelegate;
        
        private EndOperationDelegate onEndListFilesDelegate;
        
        private System.Threading.SendOrPostCallback onListFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFileDelegate;
        
        private EndOperationDelegate onEndDeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginRenameFileDelegate;
        
        private EndOperationDelegate onEndRenameFileDelegate;
        
        private System.Threading.SendOrPostCallback onRenameFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginListVersionsDelegate;
        
        private EndOperationDelegate onEndListVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onListVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVersionDelegate;
        
        private EndOperationDelegate onEndDeleteVersionDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExcelDocumentDelegate;
        
        private EndOperationDelegate onEndGetExcelDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onGetExcelDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ListFilesCompletedEventArgs> ListFilesCompleted;
        
        public event System.EventHandler<DeleteFileCompletedEventArgs> DeleteFileCompleted;
        
        public event System.EventHandler<RenameFileCompletedEventArgs> RenameFileCompleted;
        
        public event System.EventHandler<ListVersionsCompletedEventArgs> ListVersionsCompleted;
        
        public event System.EventHandler<DeleteVersionCompletedEventArgs> DeleteVersionCompleted;
        
        public event System.EventHandler<GetExcelDocumentCompletedEventArgs> GetExcelDocumentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginListFiles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListFiles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> MyDocsSL.FileService.IFileService.EndListFiles(System.IAsyncResult result) {
            return base.Channel.EndListFiles(result);
        }
        
        private System.IAsyncResult OnBeginListFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MyDocsSL.FileService.IFileService)(this)).BeginListFiles(callback, asyncState);
        }
        
        private object[] OnEndListFiles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> retVal = ((MyDocsSL.FileService.IFileService)(this)).EndListFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListFilesCompleted(object state) {
            if ((this.ListFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListFilesCompleted(this, new ListFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListFilesAsync() {
            this.ListFilesAsync(null);
        }
        
        public void ListFilesAsync(object userState) {
            if ((this.onBeginListFilesDelegate == null)) {
                this.onBeginListFilesDelegate = new BeginOperationDelegate(this.OnBeginListFiles);
            }
            if ((this.onEndListFilesDelegate == null)) {
                this.onEndListFilesDelegate = new EndOperationDelegate(this.OnEndListFiles);
            }
            if ((this.onListFilesCompletedDelegate == null)) {
                this.onListFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListFilesCompleted);
            }
            base.InvokeAsync(this.onBeginListFilesDelegate, null, this.onEndListFilesDelegate, this.onListFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginDeleteFile(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFile(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MyDocsSL.FileService.IFileService.EndDeleteFile(System.IAsyncResult result) {
            return base.Channel.EndDeleteFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((MyDocsSL.FileService.IFileService)(this)).BeginDeleteFile(name, callback, asyncState);
        }
        
        private object[] OnEndDeleteFile(System.IAsyncResult result) {
            bool retVal = ((MyDocsSL.FileService.IFileService)(this)).EndDeleteFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFileCompleted(object state) {
            if ((this.DeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFileAsync(string name) {
            this.DeleteFileAsync(name, null);
        }
        
        public void DeleteFileAsync(string name, object userState) {
            if ((this.onBeginDeleteFileDelegate == null)) {
                this.onBeginDeleteFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteFile);
            }
            if ((this.onEndDeleteFileDelegate == null)) {
                this.onEndDeleteFileDelegate = new EndOperationDelegate(this.OnEndDeleteFile);
            }
            if ((this.onDeleteFileCompletedDelegate == null)) {
                this.onDeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFileDelegate, new object[] {
                        name}, this.onEndDeleteFileDelegate, this.onDeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginRenameFile(string oldname, string newname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRenameFile(oldname, newname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MyDocsSL.FileService.IFileService.EndRenameFile(System.IAsyncResult result) {
            return base.Channel.EndRenameFile(result);
        }
        
        private System.IAsyncResult OnBeginRenameFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string oldname = ((string)(inValues[0]));
            string newname = ((string)(inValues[1]));
            return ((MyDocsSL.FileService.IFileService)(this)).BeginRenameFile(oldname, newname, callback, asyncState);
        }
        
        private object[] OnEndRenameFile(System.IAsyncResult result) {
            bool retVal = ((MyDocsSL.FileService.IFileService)(this)).EndRenameFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRenameFileCompleted(object state) {
            if ((this.RenameFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenameFileCompleted(this, new RenameFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenameFileAsync(string oldname, string newname) {
            this.RenameFileAsync(oldname, newname, null);
        }
        
        public void RenameFileAsync(string oldname, string newname, object userState) {
            if ((this.onBeginRenameFileDelegate == null)) {
                this.onBeginRenameFileDelegate = new BeginOperationDelegate(this.OnBeginRenameFile);
            }
            if ((this.onEndRenameFileDelegate == null)) {
                this.onEndRenameFileDelegate = new EndOperationDelegate(this.OnEndRenameFile);
            }
            if ((this.onRenameFileCompletedDelegate == null)) {
                this.onRenameFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameFileCompleted);
            }
            base.InvokeAsync(this.onBeginRenameFileDelegate, new object[] {
                        oldname,
                        newname}, this.onEndRenameFileDelegate, this.onRenameFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginListVersions(string filename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListVersions(filename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> MyDocsSL.FileService.IFileService.EndListVersions(System.IAsyncResult result) {
            return base.Channel.EndListVersions(result);
        }
        
        private System.IAsyncResult OnBeginListVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            return ((MyDocsSL.FileService.IFileService)(this)).BeginListVersions(filename, callback, asyncState);
        }
        
        private object[] OnEndListVersions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> retVal = ((MyDocsSL.FileService.IFileService)(this)).EndListVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListVersionsCompleted(object state) {
            if ((this.ListVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListVersionsCompleted(this, new ListVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListVersionsAsync(string filename) {
            this.ListVersionsAsync(filename, null);
        }
        
        public void ListVersionsAsync(string filename, object userState) {
            if ((this.onBeginListVersionsDelegate == null)) {
                this.onBeginListVersionsDelegate = new BeginOperationDelegate(this.OnBeginListVersions);
            }
            if ((this.onEndListVersionsDelegate == null)) {
                this.onEndListVersionsDelegate = new EndOperationDelegate(this.OnEndListVersions);
            }
            if ((this.onListVersionsCompletedDelegate == null)) {
                this.onListVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginListVersionsDelegate, new object[] {
                        filename}, this.onEndListVersionsDelegate, this.onListVersionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginDeleteVersion(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVersion(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MyDocsSL.FileService.IFileService.EndDeleteVersion(System.IAsyncResult result) {
            return base.Channel.EndDeleteVersion(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((MyDocsSL.FileService.IFileService)(this)).BeginDeleteVersion(name, callback, asyncState);
        }
        
        private object[] OnEndDeleteVersion(System.IAsyncResult result) {
            bool retVal = ((MyDocsSL.FileService.IFileService)(this)).EndDeleteVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVersionCompleted(object state) {
            if ((this.DeleteVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVersionCompleted(this, new DeleteVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVersionAsync(string name) {
            this.DeleteVersionAsync(name, null);
        }
        
        public void DeleteVersionAsync(string name, object userState) {
            if ((this.onBeginDeleteVersionDelegate == null)) {
                this.onBeginDeleteVersionDelegate = new BeginOperationDelegate(this.OnBeginDeleteVersion);
            }
            if ((this.onEndDeleteVersionDelegate == null)) {
                this.onEndDeleteVersionDelegate = new EndOperationDelegate(this.OnEndDeleteVersion);
            }
            if ((this.onDeleteVersionCompletedDelegate == null)) {
                this.onDeleteVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVersionCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVersionDelegate, new object[] {
                        name}, this.onEndDeleteVersionDelegate, this.onDeleteVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyDocsSL.FileService.IFileService.BeginGetExcelDocument(string filename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExcelDocument(filename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MyDocsSL.FileService.ExcelDocument MyDocsSL.FileService.IFileService.EndGetExcelDocument(System.IAsyncResult result) {
            return base.Channel.EndGetExcelDocument(result);
        }
        
        private System.IAsyncResult OnBeginGetExcelDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            return ((MyDocsSL.FileService.IFileService)(this)).BeginGetExcelDocument(filename, callback, asyncState);
        }
        
        private object[] OnEndGetExcelDocument(System.IAsyncResult result) {
            MyDocsSL.FileService.ExcelDocument retVal = ((MyDocsSL.FileService.IFileService)(this)).EndGetExcelDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExcelDocumentCompleted(object state) {
            if ((this.GetExcelDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExcelDocumentCompleted(this, new GetExcelDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExcelDocumentAsync(string filename) {
            this.GetExcelDocumentAsync(filename, null);
        }
        
        public void GetExcelDocumentAsync(string filename, object userState) {
            if ((this.onBeginGetExcelDocumentDelegate == null)) {
                this.onBeginGetExcelDocumentDelegate = new BeginOperationDelegate(this.OnBeginGetExcelDocument);
            }
            if ((this.onEndGetExcelDocumentDelegate == null)) {
                this.onEndGetExcelDocumentDelegate = new EndOperationDelegate(this.OnEndGetExcelDocument);
            }
            if ((this.onGetExcelDocumentCompletedDelegate == null)) {
                this.onGetExcelDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExcelDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginGetExcelDocumentDelegate, new object[] {
                        filename}, this.onEndGetExcelDocumentDelegate, this.onGetExcelDocumentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MyDocsSL.FileService.IFileService CreateChannel() {
            return new FileServiceClientChannel(this);
        }
        
        private class FileServiceClientChannel : ChannelBase<MyDocsSL.FileService.IFileService>, MyDocsSL.FileService.IFileService {
            
            public FileServiceClientChannel(System.ServiceModel.ClientBase<MyDocsSL.FileService.IFileService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginListFiles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListFiles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> EndListFiles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> _result = ((System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo>)(base.EndInvoke("ListFiles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteFile(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("DeleteFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRenameFile(string oldname, string newname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = oldname;
                _args[1] = newname;
                System.IAsyncResult _result = base.BeginInvoke("RenameFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRenameFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RenameFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListVersions(string filename, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filename;
                System.IAsyncResult _result = base.BeginInvoke("ListVersions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> EndListVersions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo> _result = ((System.Collections.ObjectModel.ObservableCollection<MyDocsSL.FileService.Fileinfo>)(base.EndInvoke("ListVersions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVersion(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVersion", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExcelDocument(string filename, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filename;
                System.IAsyncResult _result = base.BeginInvoke("GetExcelDocument", _args, callback, asyncState);
                return _result;
            }
            
            public MyDocsSL.FileService.ExcelDocument EndGetExcelDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                MyDocsSL.FileService.ExcelDocument _result = ((MyDocsSL.FileService.ExcelDocument)(base.EndInvoke("GetExcelDocument", _args, result)));
                return _result;
            }
        }
    }
}
